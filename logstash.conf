input {
  	stdin {}
}

filter {
	csv {
		columns => ["id","case_number","date","block","iucr","primary_type","description","location_description","arrest","domestic","beat","district","ward","community_area","fbi_code","x_coord","y_coord","year","updated_on","latitude","longitude","location"]

	}

  translate {
    field => "community_area"
    dictionary_path => "/Users/peter/source/chicago_crime_2/community_areas.yml"
    destination => "community_area_name"
  }

  translate {
    field => "ward"
    dictionary_path => "/Users/peter/source/chicago_crime_2/wards.yml"
    destination => "ward_alderman"
  }

	if [latitude] and [longitude] {
		mutate {
			add_field => {
				"coords" => "%{longitude}"
				"tmplat" => "%{latitude}"
		    }
		}
		mutate {
			merge => ["coords", "tmplat"]
		}

		mutate {
		    # Convert our new array of strings back to float
		    convert => [ "coords", "float" ]
		    # Delete our temporary latitude field
		    remove_field => [ "tmplat" ]
		}
	}


  grok {
    match => { "date" => "%{DATE_US:date_part} %{HOUR:hour_part}:%{MINUTE:min_part}:%{SECOND:sec_part} (?<ampm_part>AM|PM)" }
  }

	date {
		match => [ "date", "MM/dd/YYYY hh:mm:ss aa"]
		timezone => "America/Chicago"
	}

  # adjust for invalid times during DST transition
  if "_dateparsefailure" in [tags] and [hour_part] == "02" and [ampm_part] == "AM" {
    mutate {
      replace => ["hour_part", "03"]
    }

    mutate {
      replace => ["date", "%{date_part} %{hour_part}:%{min_part}:%{sec_part} %{ampm_part}"]
    }

    mutate {
      remove_field => ["tags"]
    }

    date {
  		match => [ "date", "MM/dd/YYYY hh:mm:ss aa"]
  		timezone => "America/Chicago"
  	}


  }

	mutate {
		remove_field => ["latitude", "longitude", "location", "message", "hour_part", "date_part", "min_part", "sec_part", "ampm_part"]
	}

}


output {
	# stdout { codec => rubydebug }
	stdout { codec => dots }
	elasticsearch {
		protocol => http
		host => "localhost"
		index => "chicago_crime"
    document_type => "crime"
    template => "index_template.json"
    template_name => "chicrime"
    template_overwrite => true
	}
}
